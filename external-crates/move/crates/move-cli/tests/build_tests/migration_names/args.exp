Command `migrate`:
Package toml does not specify an edition. As of 2024, Move requires all packages to define a language edition.

Please select one of the following editions:

1) 2024.beta
2) legacy

Selection (default=1): Recorded edition in 'Move.toml'

Would you like the Move compiler to migrate your code to Move 2024? (Y/n) 
Generated changes . . .
INCLUDING DEPENDENCY MoveStdlib
BUILDING A

The following changes will be made.
============================================================

--- sources/mod0.move
+++ sources/mod0.move
@@ -5,1 +5,1 @@
-    fun t0(type: u64, enum: S, mut: bool, match: u64, for: u64): u64 {
+    fun t0(`type`: u64, `enum`: S, `mut`: bool, `match`: u64, `for`: u64): u64 {
@@ -6,1 +6,1 @@
-        if (type == match) {
+        if (`type` == `match`) {
@@ -7,1 +7,1 @@
-            type
+            `type`
@@ -8,1 +8,1 @@
-        } else if (mut) {
+        } else if (`mut`) {
@@ -9,1 +9,1 @@
-            match
+            `match`
@@ -11,1 +11,1 @@
-            enum.n + for
+            `enum`.n + `for`
--- sources/mod_intermodule_errors.move
+++ sources/mod_intermodule_errors.move
@@ -5,1 +5,1 @@
-    public fun t0(type: u64, enum: S, mut: bool, match: u64, for: u64): u64 {
+    public fun t0(`type`: u64, `enum`: S, `mut`: bool, `match`: u64, `for`: u64): u64 {
@@ -6,1 +6,1 @@
-        if (type == match) {
+        if (`type` == `match`) {
@@ -7,1 +7,1 @@
-            type
+            `type`
@@ -8,1 +8,1 @@
-        } else if (mut) {
+        } else if (`mut`) {
@@ -9,1 +9,1 @@
-            match
+            `match`
@@ -11,1 +11,1 @@
-            enum.n + for
+            `enum`.n + `for`
--- sources/mod_let.move
+++ sources/mod_let.move
@@ -6,1 +6,1 @@
-        let type = 0;
+        let `type` = 0;
@@ -7,1 +7,1 @@
-        let enum = 1;
+        let `enum` = 1;
@@ -8,1 +8,1 @@
-        let mut = 2;
+        let `mut` = 2;
@@ -9,1 +9,1 @@
-        let match = 3;
+        let `match` = 3;
@@ -10,1 +10,1 @@
-        let for = 3;
+        let `for` = 3;
@@ -11,1 +11,1 @@
-        type + enum + mut + match + for
+        `type` + `enum` + `mut` + `match` + `for`
--- sources/mod_let_errors.move
+++ sources/mod_let_errors.move
@@ -6,1 +6,1 @@
-        let type = 0;
+        let `type` = 0;
@@ -7,1 +7,1 @@
-        let enum = 1;
+        let `enum` = 1;
@@ -8,1 +8,1 @@
-        let mut = 2;
+        let `mut` = 2;
@@ -9,1 +9,1 @@
-        let match = 3;
+        let `match` = 3;
@@ -10,1 +10,1 @@
-        let for = 3;
+        let `for` = 3;
@@ -11,1 +11,1 @@
-        type + enum + mut + match + for
+        `type` + `enum` + `mut` + `match` + `for`


============================================================
Apply changes? (Y/n) 
Updating "sources/mod0.move" . . .
Updating "sources/mod_intermodule_errors.move" . . .
Updating "sources/mod_let.move" . . .
Updating "sources/mod_let_errors.move" . . .

Changes complete
Wrote patchfile out to: ./migration.patch

External Command `diff -r -s sources migration_sources`:
Files sources/mod0.move and migration_sources/mod0.move are identical
Files sources/mod_intermodule_errors.move and migration_sources/mod_intermodule_errors.move are identical
Files sources/mod_let.move and migration_sources/mod_let.move are identical
Files sources/mod_let_errors.move and migration_sources/mod_let_errors.move are identical
External Command `diff -s Move.toml Move.toml.expected`:
Files Move.toml and Move.toml.expected are identical
